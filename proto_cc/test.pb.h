// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace test {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_test_2eproto();
void protobuf_AssignDesc_test_2eproto();
void protobuf_ShutdownFile_test_2eproto();

class a;
class b;

// ===================================================================

class a : public ::google::protobuf::Message {
 public:
  a();
  virtual ~a();

  a(const a& from);

  inline a& operator=(const a& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const a& default_instance();

  void Swap(a* other);

  // implements Message ----------------------------------------------

  a* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const a& from);
  void MergeFrom(const a& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 aa = 1;
  inline bool has_aa() const;
  inline void clear_aa();
  static const int kAaFieldNumber = 1;
  inline ::google::protobuf::uint32 aa() const;
  inline void set_aa(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:test.a)
 private:
  inline void set_has_aa();
  inline void clear_has_aa();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 aa_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static a* default_instance_;
};
// -------------------------------------------------------------------

class b : public ::google::protobuf::Message {
 public:
  b();
  virtual ~b();

  b(const b& from);

  inline b& operator=(const b& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const b& default_instance();

  void Swap(b* other);

  // implements Message ----------------------------------------------

  b* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const b& from);
  void MergeFrom(const b& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .test.a aaa = 1;
  inline bool has_aaa() const;
  inline void clear_aaa();
  static const int kAaaFieldNumber = 1;
  inline const ::test::a& aaa() const;
  inline ::test::a* mutable_aaa();
  inline ::test::a* release_aaa();
  inline void set_allocated_aaa(::test::a* aaa);

  // @@protoc_insertion_point(class_scope:test.b)
 private:
  inline void set_has_aaa();
  inline void clear_has_aaa();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::test::a* aaa_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static b* default_instance_;
};
// ===================================================================


// ===================================================================

// a

// required uint32 aa = 1;
inline bool a::has_aa() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void a::set_has_aa() {
  _has_bits_[0] |= 0x00000001u;
}
inline void a::clear_has_aa() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void a::clear_aa() {
  aa_ = 0u;
  clear_has_aa();
}
inline ::google::protobuf::uint32 a::aa() const {
  // @@protoc_insertion_point(field_get:test.a.aa)
  return aa_;
}
inline void a::set_aa(::google::protobuf::uint32 value) {
  set_has_aa();
  aa_ = value;
  // @@protoc_insertion_point(field_set:test.a.aa)
}

// -------------------------------------------------------------------

// b

// required .test.a aaa = 1;
inline bool b::has_aaa() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void b::set_has_aaa() {
  _has_bits_[0] |= 0x00000001u;
}
inline void b::clear_has_aaa() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void b::clear_aaa() {
  if (aaa_ != NULL) aaa_->::test::a::Clear();
  clear_has_aaa();
}
inline const ::test::a& b::aaa() const {
  // @@protoc_insertion_point(field_get:test.b.aaa)
  return aaa_ != NULL ? *aaa_ : *default_instance_->aaa_;
}
inline ::test::a* b::mutable_aaa() {
  set_has_aaa();
  if (aaa_ == NULL) aaa_ = new ::test::a;
  // @@protoc_insertion_point(field_mutable:test.b.aaa)
  return aaa_;
}
inline ::test::a* b::release_aaa() {
  clear_has_aaa();
  ::test::a* temp = aaa_;
  aaa_ = NULL;
  return temp;
}
inline void b::set_allocated_aaa(::test::a* aaa) {
  delete aaa_;
  aaa_ = aaa;
  if (aaa) {
    set_has_aaa();
  } else {
    clear_has_aaa();
  }
  // @@protoc_insertion_point(field_set_allocated:test.b.aaa)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
